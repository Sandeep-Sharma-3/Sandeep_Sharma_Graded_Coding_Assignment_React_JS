{"ast":null,"code":"var _jsxFileName = \"S:\\\\Professional_Life\\\\Full_Stack_Software_Development_Course_IIT_Roorkee\\\\Frontend\\\\ReactJS\\\\Week 12\\\\Graded Coding Assignment - React JS\\\\Sandeep_Sharma_Graded_Coding_Assignment_React_JS\\\\client\\\\src\\\\components\\\\ListMovieItems.tsx\";\nimport { Component } from \"react\";\nimport { Alert, Col, Row } from \"react-bootstrap\";\nimport getMovieList from \"../services/GetMovieList\";\nimport LoadingIndicator from \"./common/LoadingIndicator\";\nimport MovieItem from \"./MovieItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListMovieItems extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      status: 'LOADING'\n    };\n  }\n\n  render() {\n    var _this$state$movies, _this$state$error;\n\n    let el;\n\n    switch (this.state.status) {\n      case 'LOADING':\n        el = /*#__PURE__*/_jsxDEV(LoadingIndicator, {\n          size: \"large\",\n          message: \"Fetching movie list. Please Wait!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 23\n        }, this);\n        break;\n\n      case 'LOADED':\n        el = /*#__PURE__*/_jsxDEV(Row, {\n          xs: 2,\n          md: 3,\n          lg: 5,\n          children: (_this$state$movies = this.state.movies) === null || _this$state$movies === void 0 ? void 0 : _this$state$movies.map(movie => /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(MovieItem, {\n              moviedetails: movie\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 41\n            }, this)\n          }, movie.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this);\n        break;\n\n      case 'ERROR_LOADING':\n        el = /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger my-3\",\n          children: (_this$state$error = this.state.error) === null || _this$state$error === void 0 ? void 0 : _this$state$error.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this);\n        break;\n    }\n\n    ;\n    return el;\n  }\n\n  async componentDidMount() {\n    console.log(\"ListMovieItem ComponentDidMount: \", this.props.movieListType);\n    this.setState({\n      status: 'LOADING'\n    });\n\n    try {\n      const data = await getMovieList(this.props.movieListType);\n      this.setState({\n        status: 'LOADED',\n        movies: data\n      });\n    } catch (error) {\n      this.setState({\n        status: 'ERROR_LOADING',\n        error\n      });\n    }\n  }\n\n}\n\n;\nexport default ListMovieItems;","map":{"version":3,"names":["Component","Alert","Col","Row","getMovieList","LoadingIndicator","MovieItem","ListMovieItems","state","status","render","el","movies","map","movie","id","error","message","componentDidMount","console","log","props","movieListType","setState","data"],"sources":["S:/Professional_Life/Full_Stack_Software_Development_Course_IIT_Roorkee/Frontend/ReactJS/Week 12/Graded Coding Assignment - React JS/Sandeep_Sharma_Graded_Coding_Assignment_React_JS/client/src/components/ListMovieItems.tsx"],"sourcesContent":["import { Component } from \"react\";\r\nimport { Alert, Col, Row } from \"react-bootstrap\";\r\nimport movieDetails from \"../models/movieDetails\";\r\nimport getMovieList from \"../services/GetMovieList\";\r\nimport LoadingIndicator from \"./common/LoadingIndicator\";\r\nimport MovieItem from \"./MovieItem\";\r\n\r\ntype Props = {\r\n    movieListType : string\r\n};\r\n\r\ntype State = {\r\n    status: \"LOADING\" | \"LOADED\" | \"ERROR_LOADING\",\r\n    movies?: movieDetails[],\r\n    error?: Error\r\n};\r\n\r\nclass ListMovieItems extends Component<Props, State> {\r\n    state : State = {\r\n        status: 'LOADING'\r\n    };\r\n\r\n    render() {\r\n        let el;\r\n\r\n        switch(this.state.status) {\r\n            case 'LOADING':\r\n                el = (<LoadingIndicator size=\"large\" message=\"Fetching movie list. Please Wait!\"/>);\r\n                break;\r\n            case 'LOADED':\r\n                el = (\r\n                    <Row xs={2} md={3} lg={5}>\r\n                        {\r\n                            this.state.movies?.map(\r\n                                movie => (\r\n                                    <Col key={movie.id}>\r\n                                        <MovieItem moviedetails={movie} />\r\n                                    </Col>\r\n                                )\r\n                            )\r\n                        }\r\n                    </Row>\r\n                );\r\n                break;\r\n            case 'ERROR_LOADING':\r\n                el = (\r\n                    <Alert variant=\"danger my-3\">\r\n                        {this.state.error?.message}\r\n                    </Alert>\r\n                );\r\n                break;\r\n        };\r\n\r\n        return el;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        console.log(\"ListMovieItem ComponentDidMount: \",this.props.movieListType)\r\n        this.setState({\r\n            status: 'LOADING'\r\n        });\r\n\r\n        try {\r\n            const data = await getMovieList(this.props.movieListType);\r\n            this.setState({\r\n                status: 'LOADED',\r\n                movies: data\r\n            });\r\n        } catch(error:any) {\r\n            this.setState({\r\n                status: 'ERROR_LOADING',\r\n                error\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport default ListMovieItems;"],"mappings":";AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,KAAT,EAAgBC,GAAhB,EAAqBC,GAArB,QAAgC,iBAAhC;AAEA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,OAAOC,SAAP,MAAsB,aAAtB;;;AAYA,MAAMC,cAAN,SAA6BP,SAA7B,CAAqD;EAAA;IAAA;IAAA,KACjDQ,KADiD,GACjC;MACZC,MAAM,EAAE;IADI,CADiC;EAAA;;EAKjDC,MAAM,GAAG;IAAA;;IACL,IAAIC,EAAJ;;IAEA,QAAO,KAAKH,KAAL,CAAWC,MAAlB;MACI,KAAK,SAAL;QACIE,EAAE,gBAAI,QAAC,gBAAD;UAAkB,IAAI,EAAC,OAAvB;UAA+B,OAAO,EAAC;QAAvC;UAAA;UAAA;UAAA;QAAA,QAAN;QACA;;MACJ,KAAK,QAAL;QACIA,EAAE,gBACE,QAAC,GAAD;UAAK,EAAE,EAAE,CAAT;UAAY,EAAE,EAAE,CAAhB;UAAmB,EAAE,EAAE,CAAvB;UAAA,gCAEQ,KAAKH,KAAL,CAAWI,MAFnB,uDAEQ,mBAAmBC,GAAnB,CACIC,KAAK,iBACD,QAAC,GAAD;YAAA,uBACI,QAAC,SAAD;cAAW,YAAY,EAAEA;YAAzB;cAAA;cAAA;cAAA;YAAA;UADJ,GAAUA,KAAK,CAACC,EAAhB;YAAA;YAAA;YAAA;UAAA,QAFR;QAFR;UAAA;UAAA;UAAA;QAAA,QADJ;QAaA;;MACJ,KAAK,eAAL;QACIJ,EAAE,gBACE,QAAC,KAAD;UAAO,OAAO,EAAC,aAAf;UAAA,+BACK,KAAKH,KAAL,CAAWQ,KADhB,sDACK,kBAAkBC;QADvB;UAAA;UAAA;UAAA;QAAA,QADJ;QAKA;IAzBR;;IA0BC;IAED,OAAON,EAAP;EACH;;EAEsB,MAAjBO,iBAAiB,GAAG;IACtBC,OAAO,CAACC,GAAR,CAAY,mCAAZ,EAAgD,KAAKC,KAAL,CAAWC,aAA3D;IACA,KAAKC,QAAL,CAAc;MACVd,MAAM,EAAE;IADE,CAAd;;IAIA,IAAI;MACA,MAAMe,IAAI,GAAG,MAAMpB,YAAY,CAAC,KAAKiB,KAAL,CAAWC,aAAZ,CAA/B;MACA,KAAKC,QAAL,CAAc;QACVd,MAAM,EAAE,QADE;QAEVG,MAAM,EAAEY;MAFE,CAAd;IAIH,CAND,CAME,OAAMR,KAAN,EAAiB;MACf,KAAKO,QAAL,CAAc;QACVd,MAAM,EAAE,eADE;QAEVO;MAFU,CAAd;IAIH;EACJ;;AAzDgD;;AA0DpD;AAED,eAAeT,cAAf"},"metadata":{},"sourceType":"module"}